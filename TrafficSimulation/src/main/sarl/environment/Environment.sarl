package environment

import java.util.HashSet

/** 
 * @author Quan
 * 
 */
class Environment {
<<<<<<< HEAD
	var graph = new Graph 
	var environmentObjects : QuadTree
	
	var bodies = new HashSet<AgentBody>
	
	def computePerception{
		for (body : bodies){
			//body.perception = newSet
			//for (s : body.node.iterator(body.entry,position)){
				//for (o: s.objects){
					//body.perception += o
				//}
			//}
		}
	}
	def updateEnvironment{
		for (body : bodies){
			//var resolvedInfluences = newSet
			//for (inf : body.influences){
				//if (inf.inConflict(resolvedInfluences)){
					//inf = inf.resolve(resolvedInfluences)
				//}
				//resolvedInfluences += inf
			//}
			//for (reaction : resolvedInfluence){
				//reaction.apply(grid)
			//}
		}
	}
=======
//	var graph = new Graph 
//	var environmentObjects : QuadTree
//	
//	var bodies = new HashSet<AgentBody>
//	
//	def computePerception{
//		for (body : bodies){
//			body.perception = newSet
//			for (s : body.node.iterator(body.entry,position)){
//				for (o: s.objects){
//					body.perception += o
//				}
//			}
//		}
//	}
//	def updateEnvironment{
//		for (body : bodies){
//			var resolvedInfluences = newSet
//			for (inf : body.influences){
//				if (inf.inConflict(resolvedInfluences)){
//					inf = inf.resolve(resolvedInfluences)
//				}
//				resolvedInfluences += inf
//			}
//			for (reaction : resolvedInfluence){
//				reaction.apply(grid)
//			}
//		}
//	}
>>>>>>> 8436a7b7387d3cfc1c155c58407c2644c8546621
}
